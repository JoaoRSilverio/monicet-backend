[{"/home/kussbus/Documents/monicet/ui/src/index.tsx":"1","/home/kussbus/Documents/monicet/ui/src/reportWebVitals.ts":"2","/home/kussbus/Documents/monicet/ui/src/App.tsx":"3","/home/kussbus/Documents/monicet/ui/src/pages/HomePage.tsx":"4","/home/kussbus/Documents/monicet/ui/src/pages/BasePage.tsx":"5","/home/kussbus/Documents/monicet/ui/src/config/routes.ts":"6","/home/kussbus/Documents/monicet/ui/src/pages/LoginPage.tsx":"7","/home/kussbus/Documents/monicet/ui/src/services/restClient.ts":"8","/home/kussbus/Documents/monicet/ui/src/config/monicetAPI.ts":"9","/home/kussbus/Documents/monicet/ui/src/components/NavigationTopBar.tsx":"10","/home/kussbus/Documents/monicet/ui/src/pages/RegistrationPage.tsx":"11"},{"size":550,"mtime":1608413568546,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608401555223,"results":"14","hashOfConfig":"13"},{"size":4576,"mtime":1608607450432,"results":"15","hashOfConfig":"13"},{"size":289,"mtime":1608418853618,"results":"16","hashOfConfig":"13"},{"size":318,"mtime":1608606530026,"results":"17","hashOfConfig":"13"},{"size":737,"mtime":1608606693318,"results":"18","hashOfConfig":"13"},{"size":2451,"mtime":1608606530034,"results":"19","hashOfConfig":"13"},{"size":1499,"mtime":1608600206263,"results":"20","hashOfConfig":"13"},{"size":129,"mtime":1608600415318,"results":"21","hashOfConfig":"13"},{"size":1507,"mtime":1608607368063,"results":"22","hashOfConfig":"13"},{"size":2288,"mtime":1608607543640,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1461evs",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/home/kussbus/Documents/monicet/ui/src/index.tsx",[],["53","54"],"/home/kussbus/Documents/monicet/ui/src/reportWebVitals.ts",[],"/home/kussbus/Documents/monicet/ui/src/App.tsx",[],"/home/kussbus/Documents/monicet/ui/src/pages/HomePage.tsx",["55","56","57","58"],"import React from \"react\";\nimport {Alignment, Button, Navbar} from \"@blueprintjs/core\";\nimport BasePage from \"./BasePage\";\n\nexport interface IHomepageProps{}\n\nconst HomePage:React.FC<IHomepageProps> = props => {\n    return(\n           <h3>{\"HomePage\"}</h3>\n    )\n}\nexport default HomePage;","/home/kussbus/Documents/monicet/ui/src/pages/BasePage.tsx",["59","60","61"],"import React from \"react\";\nimport {Alignment, Button, Navbar} from \"@blueprintjs/core\";\n\nexport interface IHomepageProps{\n    children:any;\n}\n\nconst BasePage:React.FC<IHomepageProps> = props => {\n    return(\n        <div>\n            {props.children}\n        </div>\n    )\n}\nexport default BasePage;","/home/kussbus/Documents/monicet/ui/src/config/routes.ts",[],"/home/kussbus/Documents/monicet/ui/src/pages/LoginPage.tsx",["62","63","64"],"import React, {ChangeEvent, useState} from \"react\";\nimport {IHomepageProps} from \"./HomePage\";\nimport axios from \"axios\"\nimport {login, register} from \"../services/restClient\";\nimport {Button, InputGroup} from \"@blueprintjs/core\";\nimport {ILoginRequest} from \"../interfaces/dtos\";\nimport {log} from \"util\";\nimport {FormGroup} from \"@blueprintjs/core/lib/cjs\";\nimport BasePage from \"./BasePage\";\n\nfunction doRegister(){\n    register(\n        axios,\n        {\n            email:\"reactuser@react.com\",\n            password:\"123456\",\n            username:\"reactperson\"});\n}\nenum FIELDS {\n    USERNAME = \"username\",\n    PASSWORD = \"password\",\n    EMAIL = \"email\"\n}\nfunction useLoginRequest():[ILoginRequest,(lr:ILoginRequest)=> void]{\n    const [loginRequest,setLoginRequest] = useState({password:\"\", email:\"\" } as ILoginRequest);\n    return [loginRequest,setLoginRequest];\n}\n\nconst LoginPage:React.FC<IHomepageProps> = props => {\n    // login(axios,{email:\"reactexample\",password:\"12345\"});\n    const [loginRequest,setLoginRequest] = useLoginRequest();\n    function handleInput(text: string, field: FIELDS){\n        console.log(\"handleInput\",text,field);\n        switch (field){\n            case FIELDS.PASSWORD:\n            case FIELDS.USERNAME:\n            case FIELDS.EMAIL:\n                //@ts-ignore\n                setLoginRequest({...loginRequest,[field]:text})\n                break;\n            default:\n        }\n\n    }\n\n    return(\n        <BasePage>\n        <div>\n        <h3>{\"Login Page\"}</h3>\n            <FormGroup\n                helperText=\"insert your email here\"\n                label=\"Email\"\n                labelInfo=\"(example@provider.com)\"\n            >\n        <InputGroup\n            onChange={(event:any) => handleInput(event.target.value,FIELDS.EMAIL)}\n                    value={loginRequest.email} />\n            </FormGroup>\n            <FormGroup\n                helperText=\"Helper text with details...\"\n                label=\"Label A\"\n                labelFor=\"text-input\"\n                labelInfo=\"(required)\"\n            >\n            <InputGroup\n            leftIcon={\"lock\"}\n                type={\"password\"}\n            onChange={(event:any) => handleInput(event.target.value,FIELDS.PASSWORD)}\n            value={loginRequest.password} />\n            </FormGroup>\n            <Button icon={\"airplane\"} onClick={()=> login(axios,loginRequest)} />\n        </div>\n        </BasePage>\n    )\n}\nexport default LoginPage;","/home/kussbus/Documents/monicet/ui/src/services/restClient.ts",["65","66","67","68","69"],"import axios, {AxiosInstance, AxiosResponse} from \"axios\";\nimport {MonicetAPI} from \"../config/monicetAPI\";\nimport {ILoginRequest, ILoginResponse, IRegistrationRequest, IRegistrationResponse} from \"../interfaces/dtos\";\n\n\n\nconst POST = async (route: string, data:any):Promise<AxiosResponse<any>> =>{\n    // const authState = {tokens:{accessToken:\"\"}};\n    const response:AxiosResponse = await axios.post(route,data,{\n        headers:{\n           // \"Accept\":\"application/json\"\n            //\"Authorization\":`Bearer ${authState.tokens.accessToken}`\n        }\n    });\n\n    return response;\n}\nasync function  refreshToken(): Promise<void> {\n\n}\nfunction  validation(response:AxiosResponse){\n    //;\n}\n\nexport async function register(http: AxiosInstance,data:IRegistrationRequest):Promise<IRegistrationResponse>{\n    const response:AxiosResponse<IRegistrationResponse> = await http.post(MonicetAPI.REGISTER,data);\n    console.log(\"Registration Result\",response);\n    if(response.status == 200) {\n        return response.data;\n    }\n\n    throw new Error(`Registration Failed ${response.status} ${response.statusText} `)\n}\n\nexport async function login(http:AxiosInstance, data:ILoginRequest)\n    :Promise<ILoginResponse> {\n    const response: AxiosResponse<ILoginResponse> = await http.post(MonicetAPI.LOGIN,data);\n    console.log(\"Login Result\", response);\n    if(response.status == 200){\n        return response.data;\n    }\n    throw new Error(`Login Failed ${response.status} ${response.statusText} `)\n}\n","/home/kussbus/Documents/monicet/ui/src/config/monicetAPI.ts",[],["70","71"],"/home/kussbus/Documents/monicet/ui/src/components/NavigationTopBar.tsx",[],"/home/kussbus/Documents/monicet/ui/src/pages/RegistrationPage.tsx",["72"],"import React, {ChangeEvent, useState} from \"react\";\nimport BasePage from \"./BasePage\";\nimport {FormGroup} from \"@blueprintjs/core/lib/cjs\";\nimport {Button, InputGroup} from \"@blueprintjs/core\";\nimport {IRegistrationRequest} from \"../interfaces/dtos\";\nimport {register} from \"../services/restClient\";\nimport axios from \"axios\";\n\n\nfunction useRegistration():[IRegistrationRequest,(rR:IRegistrationRequest)=>void]{\n    return useState({username:\"\",password:\"\",email:\"\"});\n}\nenum FIELDS {\n    USERNAME = \"username\",\n    PASSWORD = \"password\",\n    EMAIL = \"email\"\n}\n\nexport const RegisterPage:React.FC<any> = (props) =>{\n    const [registrationRequest,setRegistrationRequest] = useRegistration();\n\n    function handleInput(text: string, field: FIELDS) {\n        switch (field) {\n            case FIELDS.PASSWORD:\n            case FIELDS.USERNAME:\n            case FIELDS.EMAIL:\n                //@ts-ignore\n                setRegistrationRequest({...registrationRequest, [field]: text})\n                break;\n            default:\n        }\n    }\n    return (\n        <BasePage>\n            <h3>{\"Registration Page\"}</h3>\n            <FormGroup\n                label=\"Email\"\n                labelInfo=\"(example@provider.com)\"\n            >\n                <InputGroup\n                    onChange={(event:any) => handleInput(event.target.value,FIELDS.EMAIL)}\n                    value={registrationRequest.email} />\n            </FormGroup>\n            <FormGroup\n                label=\"Username\"\n                labelInfo=\"(maria.leal)\"\n            >\n                <InputGroup\n                    onChange={(event:any) => handleInput(event.target.value,FIELDS.USERNAME)}\n                    value={registrationRequest.username} />\n            </FormGroup>\n            <FormGroup\n                label=\"Password\"\n                labelInfo=\"use 5 chars and 50 numbers please\"\n            >\n                <InputGroup\n                    leftIcon={\"lock\"}\n                    type={\"password\"}\n                    onChange={(event:any) => handleInput(event.target.value,FIELDS.PASSWORD)}\n                    value={registrationRequest.password} />\n            </FormGroup>\n            <Button onClick={()=> register(axios,registrationRequest)} text={\"Register\"} />\n        </BasePage>\n    )\n}",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":18},{"ruleId":"77","severity":1,"message":"81","line":2,"column":20,"nodeType":"79","messageId":"80","endLine":2,"endColumn":26},{"ruleId":"77","severity":1,"message":"82","line":2,"column":28,"nodeType":"79","messageId":"80","endLine":2,"endColumn":34},{"ruleId":"77","severity":1,"message":"83","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":18},{"ruleId":"77","severity":1,"message":"81","line":2,"column":20,"nodeType":"79","messageId":"80","endLine":2,"endColumn":26},{"ruleId":"77","severity":1,"message":"82","line":2,"column":28,"nodeType":"79","messageId":"80","endLine":2,"endColumn":34},{"ruleId":"77","severity":1,"message":"84","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":27},{"ruleId":"77","severity":1,"message":"85","line":7,"column":9,"nodeType":"79","messageId":"80","endLine":7,"endColumn":12},{"ruleId":"77","severity":1,"message":"86","line":11,"column":10,"nodeType":"79","messageId":"80","endLine":11,"endColumn":20},{"ruleId":"77","severity":1,"message":"87","line":7,"column":7,"nodeType":"79","messageId":"80","endLine":7,"endColumn":11},{"ruleId":"77","severity":1,"message":"88","line":18,"column":17,"nodeType":"79","messageId":"80","endLine":18,"endColumn":29},{"ruleId":"77","severity":1,"message":"89","line":21,"column":11,"nodeType":"79","messageId":"80","endLine":21,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":28,"column":24,"nodeType":"92","messageId":"93","endLine":28,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":39,"column":24,"nodeType":"92","messageId":"93","endLine":39,"endColumn":26},{"ruleId":"73","replacedBy":"94"},{"ruleId":"75","replacedBy":"95"},{"ruleId":"77","severity":1,"message":"84","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":27},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'Alignment' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Navbar' is defined but never used.","'BasePage' is defined but never used.","'ChangeEvent' is defined but never used.","'log' is defined but never used.","'doRegister' is defined but never used.","'POST' is assigned a value but never used.","'refreshToken' is defined but never used.","'validation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["96"],["97"],"no-global-assign","no-unsafe-negation"]